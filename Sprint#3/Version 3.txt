Version 3 
En esta version se trabajaron en correciones de la version 2 y ya el proyecto esta funcional al 100% 
se cambio: 
Base de Datos
- Se agregaron descripcion y estado a roles 
- Se agrego estado a ubicacion producto 
- Se agregaron PROCEDIMIENTOS ALMACENADOS de estado en todas las tablas 

BackEnd
- Se uso otro metodo para que el proyecto tenga mejor flujo y mejor proteccion de datos. Se agrego la carpeta services y model view

Model View:  esta carpeta sirve para la interacción entre la vista y el modelo principal con el que se trabaja en la base de datos. Su función principal es actuar como una capa intermedia que:
- Prepara y adapta los datos que la vista necesita, combinando o transformando información de uno o varios modelos si es necesario.
- Controla qué datos se exponen a la interfaz, protegiendo así información sensible o que no debe mostrarse directamente.
- Facilita la validación de datos específicos para la presentación o ingreso en la vista, diferente a la validación estricta del modelo de datos.
- Permite desacoplar la estructura interna de la base de datos de la presentación, haciendo que cambios internos no afecten directamente a la UI.

Service: La capa Service se utiliza para mejorar el flujo de trabajo del sistema al centralizar la lógica de negocio y las reglas que determinan cómo se procesan y manipulan los datos. Actúa como un intermediario entre la capa de acceso a datos (DATA) y los controladores(CONTROLLER), facilitando la reutilización de código y evitando duplicaciones. 
Esta capa permite realizar validaciones, transformaciones y procesos complejos antes de que los datos sean mostrados en la vista o almacenados en la base de datos, lo que mejora la mantenibilidad y escalabilidad del sistema.

- Los ViewModels se usan en la capa Service para estructurar los datos de manera específica para la vista.
- Esto hace que el controlador reciba datos ya procesados y organizados, simplificando su trabajo

SISTEMA A CLIENTE 

[ Base de Datos (SQL Server) ]
           ↓
[ Data (ADO.NET, Ejecuta SPs) ]
           ↓
[ Services (Lógica de negocio, validaciones, prepara ViewModels) ]
           ↓
[ Controllers (Reciben peticiones, llaman Services y pasan ViewModels) ]
           ↓
[ ViewModel (Modelos diseñados para la vista) ]
           ↓
[ Views (.cshtml: Interfaz de usuario) ]


CLIENTE A SISTEMA

[ Views (.cshtml: Interfaz de usuario) ]
           ↑
[ ViewModel (Modelos diseñados para la vista) ]
           ↑
[ Controllers (Reciben peticiones, llaman Services y pasan ViewModels) ]
           ↑
[ Services (Lógica de negocio, validaciones, prepara ViewModels) ]
           ↑
[ Data (ADO.NET, Ejecuta SPs) ]
           ↑
[ Base de Datos (SQL Server) ]


Correciones 
- El nombre rol no aparece en la lista del crud de usuarios
