@model IEnumerable<Sprint2.ViewModel.ProductoViewModel>

@{
    ViewData["Title"] = "Listado de Productos";
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="Crear" class="btn btn-primary">Crear Nuevo Producto</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Descripción</th>
            <th>Ubicación</th>
            <th>Cantidad</th>
            <th>Caducidad</th>
            <th>Marca</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var producto in Model)
        {
            <tr>
                <td>@producto.NombreProducto</td>
                <td>@producto.DescripcionProducto</td>
                <td>
                    @{
                        // Como en el ViewModel no tenemos el nombre directo, se podría agregar, o buscarlo aquí si está disponible.
                        // Si no, mostrar IdUbicacionProducto
                        @producto.IdUbicacionProducto
                    }
                </td>
                <td>@producto.CantidadProducto</td>
                <td>@(producto.CaducidadProducto?.ToString("yyyy-MM-dd") ?? "-")</td>
                <td>@(string.IsNullOrEmpty(producto.MarcaProducto) ? "-" : producto.MarcaProducto)</td>
                <td>@(producto.EstadoProducto ? "Activo" : "Inactivo")</td>
                <td>
                    <a asp-action="Editar" asp-route-id="@producto.IdProducto" class="btn btn-sm btn-warning">Editar</a>
                    <a asp-action="Detalles" asp-route-id="@producto.IdProducto" class="btn btn-sm btn-info">Detalles</a>
                    <a asp-action="CambiarEstado" asp-route-id="@producto.IdProducto" asp-route-estado="@(producto.EstadoProducto ? "false" : "true")" class="btn btn-sm btn-secondary">
                        @(producto.EstadoProducto ? "Desactivar" : "Activar")
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
